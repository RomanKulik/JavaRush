package com.javarush.task.task15.task1523;

/* 
Перегрузка конструкторов
В этой задаче нам предстоит создать класс Solution и его потомка SubSolution,
а для этого потомка — создать конструкторы и исправить их модификаторы доступа так,
чтобы получить три конструктора с разными модификаторами (кроме private).

Перегрузка конструкторов
1. В классе Solution создай 4 конструктора с разными модификаторами доступа.
2. В отдельном файле создай класс SubSolution и сделай его потомком класса Solution.
3. Внутри класса SubSolution создай конструкторы командой Alt+Insert -> Constructors.
4. Исправь модификаторы доступа конструкторов в SubSolution так,
чтобы получилось 3 конструктора с различными модификаторами доступа(все кроме private).


Требования:
1. В классе SubSolution должно содержаться 3 различных конструктора.
2. В классе Solution должно содержаться 4 различных конструктора.
3. В классе Solution должны быть объявлены конструкторы со всеми возможными модификаторами доступа.
4. В классе SubSolution должны быть объявлены конструкторы со всеми возможными модификаторами доступа кроме private.
5. Класс Solution должен быть родителем класса SubSolution.
*/
public class Solution {
    private Solution(){} //члены класса доступны только внутри класса
    Solution(short packege_private){} //default (package-private) (модификатор, по-умолчанию): члены класса видны внутри пакета (если класс будет так объявлен он будет доступен только внутри пакета)
    protected Solution(int protectedi){} //члены класса доступны внутри пакета и в наследниках
    public Solution(boolean publicb) {} //члены класс доступны всем


    public static void main(String[] args) {

    }
}
/*public class Solution {
    public static void main(String[] args) {

    }
}*/

